@using Documents.Models
@model DocumentViewModel

@{
    ViewBag.Title = "AddDoc";
}

<h2>AddDoc</h2>

@using (Html.BeginForm("Upload", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(x => x.CarId)
    <p>
        <b>Тип документа:</b><br />
        @Html.DropDownListFor(x => x.DocTypeId, ViewBag.DocTypeslist as SelectList, "Ничего не выбрано", new { @class = "form-control" }) @Html.ValidationMessageFor(x => x.DocTypeId)
    </p>
    <p>
        @Html.TextBoxFor(x => x.DocName, new { @class = "form-control", @placeholder = "Название / № документа" }) @Html.ValidationMessageFor(x => x.DocName)
    </p>
    <div id="hide" style="display: none;">
        <b>Сроки действия документа</b><br />
        <p>
            <b>С:</b><br />
            @Html.TextBoxFor(x => x.DateS, new { @class = "form-control" }) @Html.ValidationMessageFor(x => x.DateS)
        </p>
        <p>
            <b>По:</b><br />
            @Html.TextBoxFor(x => x.DatePo, new { @class = "form-control" }) @Html.ValidationMessageFor(x => x.DatePo)
        </p>
    </div>
    <p>
        <b>Наличие документа на борту:</b><br />
        @Html.CheckBoxFor(x => x.OnBoard)
    </p>
    <div id="uplHide" style="display: none;">
        <p>
            @Html.TextBoxFor(m => m.uploads, new { type = "file" })@Html.ValidationMessageFor(x => x.uploads)
        </p>
    </div>
    <div id="upl">
        <a href="javascript://" onclick="Add();">Добавить файл</a><br /><br />
    </div>
    <p>
        <input type="submit" value="Сохранить" class="btn btn-primary" />
        @Html.ActionLink("Назад", "CarActiveDocumment", "Home", new { carId = Model.CarId }, new { @class = "btn btn-default btn-default active" })
    </p>

}

<script type="text/javascript">

    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#DocTypeId").change(function () {
            if ($("#DocTypeId").val() != 0) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Validity")', // we are calling json method
                    dataType: 'json',
                    data: { id: $("#DocTypeId").val() },
                    success: function (states) {
                        if (states == true) {
                            document.getElementById("hide").style.display = 'block';
                        }
                        else {
                            if (states == false) {
                                document.getElementById("hide").style.display = 'none';
                                $("#DateS").val(' ');
                                $("#DatePo").val(' ');
                            }
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("NeedScan")', // we are calling json method
                    dataType: 'json',
                    data: { id: $("#DocTypeId").val() },
                    success: function (states) {
                        if (states == true) {
                            document.getElementById("uplHide").style.display = 'block';
                        }
                        else {
                            if (states == false) {
                                document.getElementById("uplHide").style.display = 'none';
                            }
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            }
            else {
                document.getElementById("hide").style.display = 'none';
                $("#DateS").val(' ');
                $("#DatePo").val(' ');
                document.getElementById("uplHide").style.display = 'none';
            }
        })
    });

    //function guid() {
    //    function s4() {
    //        return Math.floor((1 + Math.random()) * 0x10000)
    //          .toString(16)
    //          .substring(1);
    //    }
    //    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    //      s4() + '-' + s4() + s4() + s4();
    //}

    function Add() {
        var guid = Math.floor((Math.random()) * 100000);

        $("div[id=upl]").append('<p class = "' + guid + '">@Html.TextBoxFor(m => m.uploads, new { type = "file" })@Html.ValidationMessageFor(x => x.uploads)<br/><a href="javascript://' + guid + '" onclick="Remuve(' + guid + ')">Удалить</a><span> | </span><a href="javascript://" onclick="Add();">Добавить еще файл</a><br /></p>');
    }
    function Remuve(guid) {
        $("p." + guid).remove();
    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link href='@Url.Content("~/Content/themes/base/all.css")' rel="stylesheet" type="text/css" />
    <script src='@Url.Content("~/Scripts/jquery-ui-1.11.4.min.js")' type="text/javascript"></script>
    <script src='@Url.Content("~/Scripts/mvcfoolproof.unobtrusive.min.js" )'></script>
    <script src='@Url.Content("~/Scripts/MvcFoolproofJQueryValidation.min.js" )'></script>
    <script src='@Url.Content("~/Scripts/MvcFoolproofValidation.min.js" )'></script>
    <script type="text/javascript">
        $(function () {
            $("#DateS").datepicker({ dateFormat: 'dd/mm/yy' });
            $("#DatePo").datepicker({ dateFormat: 'dd/mm/yy' });
            $.datepicker.regional['ru'] = {
                prevText: 'Пред',
                nextText: 'След',
                monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',
                'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
                monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн',
                'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
                dayNames: ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],
                dayNamesShort: ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'сбт'],
                dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
                weekHeader: 'Не',
                dateFormat: 'dd/mm/yy',
                firstDay: 1,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ''
            };
            $.datepicker.setDefaults($.datepicker.regional['ru']);
            $.validator.addMethod('date',
                function (value, element) {
                    var ok = true;
                    try {
                        $.datepicker.parseDate('dd/mm/yy', value);
                    }
                    catch (err) {
                        ok = false;
                    }
                    return ok;
                });
        });
    </script>
}
